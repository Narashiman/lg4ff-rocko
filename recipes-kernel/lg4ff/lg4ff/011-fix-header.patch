--- a/hid-lg4ff.h
+++ b/hid-lg4ff.h
@@ -1,11 +1,11 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 #ifndef __HID_LG4FF_H
 #define __HID_LG4FF_H
 
-#ifdef CONFIG_LOGIWHEELS_FF
-extern int lg4ff_no_autoswitch; /* From hid-lg.c */
+#ifdef CONFIG_LG4FF
+extern bool lg4ff_no_autoswitch; /* From hid-lg.c */
 
 int lg4ff_adjust_input_event(struct hid_device *hid, struct hid_field *field,
-                             struct hid_usage *usage, s32 value, struct lg_drv_data *drv_data);
+                             struct hid_usage *usage, s32 value, struct lg4ff_device_entry *entry);
 int lg4ff_raw_event(struct hid_device *hdev, struct hid_report *report,
-                u8 *rd, int size, struct lg_drv_data *drv_data);
+                u8 *rd, int size);
 int lg4ff_init(struct hid_device *hdev);
 int lg4ff_deinit(struct hid_device *hdev);
 #else
 static inline int lg4ff_adjust_input_event(struct hid_device *hid, struct hid_field *field,
-                                           struct hid_usage *usage, s32 value, struct lg_drv_data *drv_data) { return 0; }
+                                           struct hid_usage *usage, s32 value, struct lg4ff_device_entry *entry) { return 0; }
 static inline int lg4ff_raw_event(struct hid_device *hdev, struct hid_report *report,
-                u8 *rd, int size, struct lg_drv_data *drv_data) { return 0; }
+                u8 *rd, int size) { return 0; }
 static inline int lg4ff_init(struct hid_device *hdev) { return -1; }
 static inline int lg4ff_deinit(struct hid_device *hdev) { return -1; }
 #endif
+
+#endif 